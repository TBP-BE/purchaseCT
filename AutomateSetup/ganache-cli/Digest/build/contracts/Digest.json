{
  "contractName": "Digest",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "client",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "corrId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "digest",
          "type": "bytes"
        }
      ],
      "name": "DigestAdded",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "corrId",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "digest",
          "type": "bytes"
        }
      ],
      "name": "addDigest",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "client",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "corrId",
          "type": "string"
        }
      ],
      "name": "getDigest",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.12+commit.7709ece9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"client\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"corrId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"digest\",\"type\":\"bytes\"}],\"name\":\"DigestAdded\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"corrId\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"digest\",\"type\":\"bytes\"}],\"name\":\"addDigest\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"client\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"corrId\",\"type\":\"string\"}],\"name\":\"getDigest\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Andrea Lamparelli\",\"methods\":{\"addDigest(string,bytes)\":{\"params\":{\"corrId\":\"is the identifier to which the new digest has to be associated with\",\"digest\":\"is the new operation digest that has to be added*\"}},\"getDigest(address,string)\":{\"params\":{\"client\":\"is the address from which retrieve the digest\",\"corrId\":\"is used to retrieve only those digest that are correlated to this id*\"}}},\"title\":\"A simple digests container\"},\"userdoc\":{\"methods\":{\"addDigest(string,bytes)\":{\"notice\":\"Function that adds a new digest strictly correlated to an identifier, on behalf of a client application\"},\"getDigest(address,string)\":{\"notice\":\"Function used to retrieve a digest for a given client which is associated to a given corrId\"}},\"notice\":\"This contract can be used to store digests of external operations, each digest is associated to a specific correlation_id*\"}},\"settings\":{\"compilationTarget\":{\"/C/Users/falazigb/Documents/GitHub/SCIP-CaseStudy/SmartContracts/Ethereum/Digest/contracts/Digest.sol\":\"Digest\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/falazigb/Documents/GitHub/SCIP-CaseStudy/SmartContracts/Ethereum/Digest/contracts/Digest.sol\":{\"keccak256\":\"0x9be62ee5b648005bd0143dbcd54e939daf996e4fd2a8cc5617100c7e358da4bb\",\"urls\":[\"bzz-raw://333aecbbe5458986e321edba8bd9484bbb5ec531f5d9a09b5353a8dd51f6743c\",\"dweb:/ipfs/QmS1wp67xpPmd7qrjPHdSaDAhe7ifRe2D385gpTNxsGGg8\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506106fe806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063157240551461003b578063a03530aa1461018f575b600080fd5b6101146004803603604081101561005157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561008e57600080fd5b8201836020820111156100a057600080fd5b803590602001918460018302840111640100000000831117156100c257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506102e1565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610154578082015181840152602081019050610139565b50505050905090810190601f1680156101815780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102df600480360360408110156101a557600080fd5b81019080803590602001906401000000008111156101c257600080fd5b8201836020820111156101d457600080fd5b803590602001918460018302840111640100000000831117156101f657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561025957600080fd5b82018360208201111561026b57600080fd5b8035906020019184600183028401116401000000008311171561028d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610429565b005b60606000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020826040518082805190602001908083835b602083106103555780518252602082019150602081019050602083039250610332565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390208054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561041c5780601f106103f15761010080835404028352916020019161041c565b820191906000526020600020905b8154815290600101906020018083116103ff57829003601f168201915b5050505050905092915050565b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020836040518082805190602001908083835b6020831061049c5780518252602082019150602081019050602083039250610479565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902090805190602001906104e2929190610624565b507ffd3ac51df6a811ef00d3a5962aecb4d7697cfb61e3bc796533604457c31adf34338383604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018060200180602001838103835285818151815260200191508051906020019080838360005b8381101561057d578082015181840152602081019050610562565b50505050905090810190601f1680156105aa5780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b838110156105e35780820151818401526020810190506105c8565b50505050905090810190601f1680156106105780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a15050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061066557805160ff1916838001178555610693565b82800160010185558215610693579182015b82811115610692578251825591602001919060010190610677565b5b5090506106a091906106a4565b5090565b6106c691905b808211156106c25760008160009055506001016106aa565b5090565b9056fea265627a7a72315820e387e93ba5e4b0397af599472d7645494ca011eb9b5b0ec3b13e167737c7769064736f6c634300050c0032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c8063157240551461003b578063a03530aa1461018f575b600080fd5b6101146004803603604081101561005157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561008e57600080fd5b8201836020820111156100a057600080fd5b803590602001918460018302840111640100000000831117156100c257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506102e1565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610154578082015181840152602081019050610139565b50505050905090810190601f1680156101815780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102df600480360360408110156101a557600080fd5b81019080803590602001906401000000008111156101c257600080fd5b8201836020820111156101d457600080fd5b803590602001918460018302840111640100000000831117156101f657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561025957600080fd5b82018360208201111561026b57600080fd5b8035906020019184600183028401116401000000008311171561028d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610429565b005b60606000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020826040518082805190602001908083835b602083106103555780518252602082019150602081019050602083039250610332565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390208054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561041c5780601f106103f15761010080835404028352916020019161041c565b820191906000526020600020905b8154815290600101906020018083116103ff57829003601f168201915b5050505050905092915050565b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020836040518082805190602001908083835b6020831061049c5780518252602082019150602081019050602083039250610479565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902090805190602001906104e2929190610624565b507ffd3ac51df6a811ef00d3a5962aecb4d7697cfb61e3bc796533604457c31adf34338383604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018060200180602001838103835285818151815260200191508051906020019080838360005b8381101561057d578082015181840152602081019050610562565b50505050905090810190601f1680156105aa5780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b838110156105e35780820151818401526020810190506105c8565b50505050905090810190601f1680156106105780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a15050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061066557805160ff1916838001178555610693565b82800160010185558215610693579182015b82811115610692578251825591602001919060010190610677565b5b5090506106a091906106a4565b5090565b6106c691905b808211156106c25760008160009055506001016106aa565b5090565b9056fea265627a7a72315820e387e93ba5e4b0397af599472d7645494ca011eb9b5b0ec3b13e167737c7769064736f6c634300050c0032",
  "sourceMap": "242:1536:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;242:1536:0;;;;;;;",
  "deployedSourceMap": "242:1536:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;242:1536:0;;;;;;;;;;;;;;;;;;;;;;;;1634:142;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1634:142:0;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1634:142:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1634:142:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1634:142:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1634:142:0;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1634:142:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1164:179;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1164:179:0;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1164:179:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1164:179:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1164:179:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1164:179:0;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1164:179:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1164:179:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1164:179:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1164:179:0;;;;;;;;;;;;;;;:::i;:::-;;1634:142;1712:12;1743:10;:18;1754:6;1743:18;;;;;;;;;;;;;;;1762:6;1743:26;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1743:26:0;;;;;;;;;;;;;;;;;;;;;1736:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1634:142;;;;:::o;1164:179::-;1276:6;1243:10;:22;1254:10;1243:22;;;;;;;;;;;;;;;1266:6;1243:30;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1243:30:0;;;;;;;;;;;;;;;;;;;;;:39;;;;;;;;;;;;:::i;:::-;;1297;1309:10;1321:6;1329;1297:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1297:39:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1297:39:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1164:179;;:::o;242:1536::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity >=0.4.21 <0.6.0;\n\n/**\n * @title A simple digests container\n * @author Andrea Lamparelli\n * @notice This contract can be used to store digests of external operations, each digest is associated to a specific correlation_id\n **/\ncontract Digest {\n    \n    /**\n     * client_addres => (correlation_id => digest)\n     **/\n    mapping (address => mapping (string => bytes)) private digestsMap;\n    \n    /**\n     * @notice Events that notifies that a specific client has added a new digest on a specific correlation identifier\n     * @param client identifies which is the client application that added the new digest\n     * @param corrId is the identifier to which the digest is correlated to\n     * @param digest is a digest of a specific operation performed by the client\n     **/\n    event DigestAdded(address client, string corrId, bytes digest);\n    \n    /**\n     * @notice Function that adds a new digest strictly correlated to an identifier, on behalf of a client application\n     * @param corrId is the identifier to which the new digest has to be associated with\n     * @param digest is the new operation digest that has to be added\n     **/\n    function addDigest(string memory corrId, bytes memory digest) public {\n        digestsMap[msg.sender][corrId] = digest;\n        emit DigestAdded(msg.sender, corrId, digest);\n    }\n    \n    /**\n     * @notice Function used to retrieve a digest for a given client which is associated to a given corrId\n     * @param client is the address from which retrieve the digest\n     * @param corrId is used to retrieve only those digest that are correlated to this id\n     **/\n    function getDigest(address client, string memory corrId) public view returns (bytes memory) {\n        return digestsMap[client][corrId];\n    }\n}",
  "sourcePath": "C:/Users/falazigb/Documents/GitHub/SCIP-CaseStudy/SmartContracts/Ethereum/Digest/contracts/Digest.sol",
  "ast": {
    "absolutePath": "/C/Users/falazigb/Documents/GitHub/SCIP-CaseStudy/SmartContracts/Ethereum/Digest/contracts/Digest.sol",
    "exportedSymbols": {
      "Digest": [
        56
      ]
    },
    "id": 57,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title A simple digests container\n@author Andrea Lamparelli\n@notice This contract can be used to store digests of external operations, each digest is associated to a specific correlation_id*",
        "fullyImplemented": true,
        "id": 56,
        "linearizedBaseContracts": [
          56
        ],
        "name": "Digest",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7,
            "name": "digestsMap",
            "nodeType": "VariableDeclaration",
            "scope": 56,
            "src": "337:65:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_string_memory_$_t_bytes_storage_$_$",
              "typeString": "mapping(address => mapping(string => bytes))"
            },
            "typeName": {
              "id": 6,
              "keyType": {
                "id": 2,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "346:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "337:46:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_string_memory_$_t_bytes_storage_$_$",
                "typeString": "mapping(address => mapping(string => bytes))"
              },
              "valueType": {
                "id": 5,
                "keyType": {
                  "id": 3,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "366:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "nodeType": "Mapping",
                "src": "357:25:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_string_memory_$_t_bytes_storage_$",
                  "typeString": "mapping(string => bytes)"
                },
                "valueType": {
                  "id": 4,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "376:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": "@notice Events that notifies that a specific client has added a new digest on a specific correlation identifier\n@param client identifies which is the client application that added the new digest\n@param corrId is the identifier to which the digest is correlated to\n@param digest is a digest of a specific operation performed by the client*",
            "id": 15,
            "name": "DigestAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 14,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9,
                  "indexed": false,
                  "name": "client",
                  "nodeType": "VariableDeclaration",
                  "scope": 15,
                  "src": "814:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "814:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11,
                  "indexed": false,
                  "name": "corrId",
                  "nodeType": "VariableDeclaration",
                  "scope": 15,
                  "src": "830:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 10,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "830:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13,
                  "indexed": false,
                  "name": "digest",
                  "nodeType": "VariableDeclaration",
                  "scope": 15,
                  "src": "845:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 12,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "845:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "813:45:0"
            },
            "src": "796:63:0"
          },
          {
            "body": {
              "id": 38,
              "nodeType": "Block",
              "src": "1233:110:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 29,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 22,
                          "name": "digestsMap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7,
                          "src": "1243:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_string_memory_$_t_bytes_storage_$_$",
                            "typeString": "mapping(address => mapping(string memory => bytes storage ref))"
                          }
                        },
                        "id": 26,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 23,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 128,
                            "src": "1254:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 24,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1254:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1243:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_$_t_bytes_storage_$",
                          "typeString": "mapping(string memory => bytes storage ref)"
                        }
                      },
                      "id": 27,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 25,
                        "name": "corrId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17,
                        "src": "1266:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1243:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 28,
                      "name": "digest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "1276:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "1243:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 30,
                  "nodeType": "ExpressionStatement",
                  "src": "1243:39:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 32,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 128,
                          "src": "1309:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 33,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1309:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 34,
                        "name": "corrId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17,
                        "src": "1321:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 35,
                        "name": "digest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19,
                        "src": "1329:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 31,
                      "name": "DigestAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "1297:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory,bytes memory)"
                      }
                    },
                    "id": 36,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1297:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37,
                  "nodeType": "EmitStatement",
                  "src": "1292:44:0"
                }
              ]
            },
            "documentation": "@notice Function that adds a new digest strictly correlated to an identifier, on behalf of a client application\n@param corrId is the identifier to which the new digest has to be associated with\n@param digest is the new operation digest that has to be added*",
            "id": 39,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addDigest",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17,
                  "name": "corrId",
                  "nodeType": "VariableDeclaration",
                  "scope": 39,
                  "src": "1183:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 16,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1183:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19,
                  "name": "digest",
                  "nodeType": "VariableDeclaration",
                  "scope": 39,
                  "src": "1205:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 18,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1205:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1182:43:0"
            },
            "returnParameters": {
              "id": 21,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1233:0:0"
            },
            "scope": 56,
            "src": "1164:179:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 54,
              "nodeType": "Block",
              "src": "1726:50:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 48,
                        "name": "digestsMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "1743:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_string_memory_$_t_bytes_storage_$_$",
                          "typeString": "mapping(address => mapping(string memory => bytes storage ref))"
                        }
                      },
                      "id": 50,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 49,
                        "name": "client",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41,
                        "src": "1754:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1743:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_$_t_bytes_storage_$",
                        "typeString": "mapping(string memory => bytes storage ref)"
                      }
                    },
                    "id": 52,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 51,
                      "name": "corrId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43,
                      "src": "1762:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1743:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "functionReturnParameters": 47,
                  "id": 53,
                  "nodeType": "Return",
                  "src": "1736:33:0"
                }
              ]
            },
            "documentation": "@notice Function used to retrieve a digest for a given client which is associated to a given corrId\n@param client is the address from which retrieve the digest\n@param corrId is used to retrieve only those digest that are correlated to this id*",
            "id": 55,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDigest",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 44,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41,
                  "name": "client",
                  "nodeType": "VariableDeclaration",
                  "scope": 55,
                  "src": "1653:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1653:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43,
                  "name": "corrId",
                  "nodeType": "VariableDeclaration",
                  "scope": 55,
                  "src": "1669:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 42,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1669:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1652:38:0"
            },
            "returnParameters": {
              "id": 47,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 55,
                  "src": "1712:12:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 45,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1712:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1711:14:0"
            },
            "scope": 56,
            "src": "1634:142:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 57,
        "src": "242:1536:0"
      }
    ],
    "src": "0:1778:0"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/falazigb/Documents/GitHub/SCIP-CaseStudy/SmartContracts/Ethereum/Digest/contracts/Digest.sol",
    "exportedSymbols": {
      "Digest": [
        56
      ]
    },
    "id": 57,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title A simple digests container\n@author Andrea Lamparelli\n@notice This contract can be used to store digests of external operations, each digest is associated to a specific correlation_id*",
        "fullyImplemented": true,
        "id": 56,
        "linearizedBaseContracts": [
          56
        ],
        "name": "Digest",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7,
            "name": "digestsMap",
            "nodeType": "VariableDeclaration",
            "scope": 56,
            "src": "337:65:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_string_memory_$_t_bytes_storage_$_$",
              "typeString": "mapping(address => mapping(string => bytes))"
            },
            "typeName": {
              "id": 6,
              "keyType": {
                "id": 2,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "346:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "337:46:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_string_memory_$_t_bytes_storage_$_$",
                "typeString": "mapping(address => mapping(string => bytes))"
              },
              "valueType": {
                "id": 5,
                "keyType": {
                  "id": 3,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "366:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "nodeType": "Mapping",
                "src": "357:25:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_string_memory_$_t_bytes_storage_$",
                  "typeString": "mapping(string => bytes)"
                },
                "valueType": {
                  "id": 4,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "376:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": "@notice Events that notifies that a specific client has added a new digest on a specific correlation identifier\n@param client identifies which is the client application that added the new digest\n@param corrId is the identifier to which the digest is correlated to\n@param digest is a digest of a specific operation performed by the client*",
            "id": 15,
            "name": "DigestAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 14,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9,
                  "indexed": false,
                  "name": "client",
                  "nodeType": "VariableDeclaration",
                  "scope": 15,
                  "src": "814:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "814:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11,
                  "indexed": false,
                  "name": "corrId",
                  "nodeType": "VariableDeclaration",
                  "scope": 15,
                  "src": "830:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 10,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "830:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13,
                  "indexed": false,
                  "name": "digest",
                  "nodeType": "VariableDeclaration",
                  "scope": 15,
                  "src": "845:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 12,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "845:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "813:45:0"
            },
            "src": "796:63:0"
          },
          {
            "body": {
              "id": 38,
              "nodeType": "Block",
              "src": "1233:110:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 29,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 22,
                          "name": "digestsMap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7,
                          "src": "1243:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_string_memory_$_t_bytes_storage_$_$",
                            "typeString": "mapping(address => mapping(string memory => bytes storage ref))"
                          }
                        },
                        "id": 26,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 23,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 128,
                            "src": "1254:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 24,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1254:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1243:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_$_t_bytes_storage_$",
                          "typeString": "mapping(string memory => bytes storage ref)"
                        }
                      },
                      "id": 27,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 25,
                        "name": "corrId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17,
                        "src": "1266:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1243:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 28,
                      "name": "digest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "1276:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "1243:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 30,
                  "nodeType": "ExpressionStatement",
                  "src": "1243:39:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 32,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 128,
                          "src": "1309:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 33,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1309:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 34,
                        "name": "corrId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17,
                        "src": "1321:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 35,
                        "name": "digest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19,
                        "src": "1329:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 31,
                      "name": "DigestAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "1297:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory,bytes memory)"
                      }
                    },
                    "id": 36,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1297:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37,
                  "nodeType": "EmitStatement",
                  "src": "1292:44:0"
                }
              ]
            },
            "documentation": "@notice Function that adds a new digest strictly correlated to an identifier, on behalf of a client application\n@param corrId is the identifier to which the new digest has to be associated with\n@param digest is the new operation digest that has to be added*",
            "id": 39,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addDigest",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17,
                  "name": "corrId",
                  "nodeType": "VariableDeclaration",
                  "scope": 39,
                  "src": "1183:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 16,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1183:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19,
                  "name": "digest",
                  "nodeType": "VariableDeclaration",
                  "scope": 39,
                  "src": "1205:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 18,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1205:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1182:43:0"
            },
            "returnParameters": {
              "id": 21,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1233:0:0"
            },
            "scope": 56,
            "src": "1164:179:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 54,
              "nodeType": "Block",
              "src": "1726:50:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 48,
                        "name": "digestsMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "1743:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_string_memory_$_t_bytes_storage_$_$",
                          "typeString": "mapping(address => mapping(string memory => bytes storage ref))"
                        }
                      },
                      "id": 50,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 49,
                        "name": "client",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41,
                        "src": "1754:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1743:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_$_t_bytes_storage_$",
                        "typeString": "mapping(string memory => bytes storage ref)"
                      }
                    },
                    "id": 52,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 51,
                      "name": "corrId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43,
                      "src": "1762:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1743:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "functionReturnParameters": 47,
                  "id": 53,
                  "nodeType": "Return",
                  "src": "1736:33:0"
                }
              ]
            },
            "documentation": "@notice Function used to retrieve a digest for a given client which is associated to a given corrId\n@param client is the address from which retrieve the digest\n@param corrId is used to retrieve only those digest that are correlated to this id*",
            "id": 55,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDigest",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 44,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41,
                  "name": "client",
                  "nodeType": "VariableDeclaration",
                  "scope": 55,
                  "src": "1653:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1653:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43,
                  "name": "corrId",
                  "nodeType": "VariableDeclaration",
                  "scope": 55,
                  "src": "1669:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 42,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1669:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1652:38:0"
            },
            "returnParameters": {
              "id": 47,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 55,
                  "src": "1712:12:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 45,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1712:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1711:14:0"
            },
            "scope": 56,
            "src": "1634:142:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 57,
        "src": "242:1536:0"
      }
    ],
    "src": "0:1778:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.12+commit.7709ece9.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0xfd3ac51df6a811ef00d3a5962aecb4d7697cfb61e3bc796533604457c31adf34": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "client",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "corrId",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "bytes",
              "name": "digest",
              "type": "bytes"
            }
          ],
          "name": "DigestAdded",
          "type": "event",
          "signature": "0xfd3ac51df6a811ef00d3a5962aecb4d7697cfb61e3bc796533604457c31adf34"
        }
      },
      "links": {},
      "address": "0x516cC8fF4410eA968f26C406c8b20B895D3108ea",
      "transactionHash": "0xf6b511e8393af7f876f2a97863ef740200f7ee5b7a44933bf8ea4f7b77b85f6c"
    }
  },
  "schemaVersion": "3.0.19",
  "updatedAt": "2019-11-28T13:48:45.101Z",
  "networkType": "ethereum",
  "devdoc": {
    "author": "Andrea Lamparelli",
    "methods": {
      "addDigest(string,bytes)": {
        "params": {
          "corrId": "is the identifier to which the new digest has to be associated with",
          "digest": "is the new operation digest that has to be added*"
        }
      },
      "getDigest(address,string)": {
        "params": {
          "client": "is the address from which retrieve the digest",
          "corrId": "is used to retrieve only those digest that are correlated to this id*"
        }
      }
    },
    "title": "A simple digests container"
  },
  "userdoc": {
    "methods": {
      "addDigest(string,bytes)": {
        "notice": "Function that adds a new digest strictly correlated to an identifier, on behalf of a client application"
      },
      "getDigest(address,string)": {
        "notice": "Function used to retrieve a digest for a given client which is associated to a given corrId"
      }
    },
    "notice": "This contract can be used to store digests of external operations, each digest is associated to a specific correlation_id*"
  }
}